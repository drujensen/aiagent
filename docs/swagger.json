{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the AI Agent application.",
        "title": "AI Agent API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "home.drujensen.com",
    "basePath": "/",
    "paths": {
        "/api/agents": {
            "get": {
                "description": "Retrieves a list of all agents.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "List all agents",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of agents",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Agent"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new agent with the provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Create a new agent",
                "parameters": [
                    {
                        "description": "Agent information to create",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Agent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created agent",
                        "schema": {
                            "$ref": "#/definitions/entities.Agent"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/agents/{id}": {
            "get": {
                "description": "Retrieves an agent's information by their ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Get an agent by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved agent",
                        "schema": {
                            "$ref": "#/definitions/entities.Agent"
                        }
                    },
                    "400": {
                        "description": "Invalid agent ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing agent with the provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Update an existing agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent information to update",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Agent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated agent",
                        "schema": {
                            "$ref": "#/definitions/entities.Agent"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or agent ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an agent by their ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Delete an agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted agent"
                    },
                    "400": {
                        "description": "Invalid agent ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/chats": {
            "get": {
                "description": "Retrieves a list of all chats.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "List all chats",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of chats",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Chat"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new chat with the provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Create a new chat",
                "parameters": [
                    {
                        "description": "Chat information to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apicontrollers.CreateChatRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created chat",
                        "schema": {
                            "$ref": "#/definitions/entities.Chat"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/chats/{id}": {
            "get": {
                "description": "Retrieves a chat's information by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get a chat by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved chat",
                        "schema": {
                            "$ref": "#/definitions/entities.Chat"
                        }
                    },
                    "400": {
                        "description": "Invalid chat ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing chat with the provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Update an existing chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chat information to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apicontrollers.UpdateChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated chat",
                        "schema": {
                            "$ref": "#/definitions/entities.Chat"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or chat ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a chat by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Delete a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted chat"
                    },
                    "400": {
                        "description": "Invalid chat ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/chats/{id}/messages": {
            "post": {
                "description": "Sends a new message to a chat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Send a message to a chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message to send",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully sent message",
                        "schema": {
                            "$ref": "#/definitions/entities.Message"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or chat ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apicontrollers.CreateChatRequest": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string",
                    "example": "60d0ddb0f0a4a729c0a8e9b1"
                },
                "name": {
                    "type": "string",
                    "example": "My Chat"
                }
            }
        },
        "apicontrollers.UpdateChatRequest": {
            "type": "object",
            "properties": {
                "agent_id": {
                    "type": "string",
                    "example": "60d0ddb0f0a4a729c0a8e9b1"
                },
                "name": {
                    "type": "string",
                    "example": "Updated Chat Name"
                }
            }
        },
        "entities.Agent": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "context_window": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "endpoint": {
                    "description": "Will be populated automatically for known providers",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "max_tokens": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "provider_type": {
                    "description": "Denormalized for easier access",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entities.ProviderType"
                        }
                    ]
                },
                "role": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entities.Chat": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "agent_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Message"
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/entities.ChatUsage"
                }
            }
        },
        "entities.ChatUsage": {
            "type": "object",
            "properties": {
                "total_completion_tokens": {
                    "type": "integer"
                },
                "total_cost": {
                    "description": "Cost in USD",
                    "type": "number"
                },
                "total_prompt_tokens": {
                    "type": "integer"
                },
                "total_tokens": {
                    "type": "integer"
                }
            }
        },
        "entities.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tool_call_id": {
                    "type": "string"
                },
                "tool_calls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.ToolCall"
                    }
                },
                "usage": {
                    "description": "Usage metrics for this message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/entities.Usage"
                        }
                    ]
                }
            }
        },
        "entities.ProviderType": {
            "type": "string",
            "enum": [
                "openai",
                "anthropic",
                "xai",
                "google",
                "deepseek",
                "ollama",
                "generic"
            ],
            "x-enum-varnames": [
                "ProviderOpenAI",
                "ProviderAnthropic",
                "ProviderXAI",
                "ProviderGoogle",
                "ProviderDeepseek",
                "ProviderOllama",
                "ProviderGeneric"
            ]
        },
        "entities.ToolCall": {
            "type": "object",
            "properties": {
                "function": {
                    "type": "object",
                    "properties": {
                        "arguments": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entities.Usage": {
            "type": "object",
            "properties": {
                "completion_tokens": {
                    "description": "Output tokens",
                    "type": "integer"
                },
                "cost": {
                    "description": "Cost in USD",
                    "type": "number"
                },
                "prompt_tokens": {
                    "description": "Input tokens",
                    "type": "integer"
                },
                "total_tokens": {
                    "description": "Total tokens processed",
                    "type": "integer"
                }
            }
        }
    }
}