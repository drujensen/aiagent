package entities

import "time"

// TaskStatus represents the possible states of a task in the workflow automation platform.
// It is stored as a string in MongoDB for simplicity and readability.
type TaskStatus string

// Constants defining valid TaskStatus values
const (
	TaskPending    TaskStatus = "pending"     // Task is created but not yet started
	TaskInProgress TaskStatus = "in_progress" // Task is currently being processed
	TaskCompleted  TaskStatus = "completed"   // Task has finished successfully
	TaskFailed     TaskStatus = "failed"      // Task has encountered an unrecoverable error
)

// Task represents a unit of work assigned to an AI agent in the workflow automation platform.
// It is stored in MongoDB as a document in the 'tasks' collection and tracks the task's
// description, assignment, status, human interaction requirements, and processing history.
//
// Key features:
// - Hierarchical tasks: Supports subtasks via ParentTaskID.
// - Status tracking: Uses TaskStatus enum for consistent state management.
// - Human oversight: Allows flagging tasks for human input.
// - Context history: Stores Messages to preserve tool outputs and AI responses.
//
// Relationships:
// - One-to-one with AIAgent via AssignedTo.
// - Self-referential for subtasks via ParentTaskID.
// - One-to-one with Conversation via TaskID (when human interaction is required).
type Task struct {
	ID                       string     `bson:"_id,omitempty"`              // Unique identifier, auto-generated by MongoDB if omitted
	Description              string     `bson:"description"`                // Details of what the task entails, required
	AssignedTo               string     `bson:"assigned_to"`                // ID of the AIAgent responsible for the task, required
	ParentTaskID             string     `bson:"parent_task_id,omitempty"`   // ID of the parent task, optional for top-level tasks
	Status                   TaskStatus `bson:"status"`                     // Current state of the task, required
	Result                   string     `bson:"result,omitempty"`           // Outcome of the task, optional
	RequiresHumanInteraction bool       `bson:"requires_human_interaction"` // Flag indicating if human input is needed, defaults to false
	Messages                 []Message  `bson:"messages"`                   // History of interactions for the task, including tool executions and AI responses
	CreatedAt                time.Time  `bson:"created_at"`                 // Timestamp of creation, set on insert
	UpdatedAt                time.Time  `bson:"updated_at"`                 // Timestamp of last update, updated on modification
}

// Notes:
// - Status transitions are managed by TaskService (e.g., pending -> in_progress -> completed).
// - Messages is initialized as an empty slice and populated during processing; used for AI context.
// - Edge cases: Tasks with RequiresHumanInteraction=true require a Conversation, managed externally.
// - Assumption: AssignedTo references a valid AIAgent, validated in TaskService.
// - Limitation: No explicit timeout; handled in TaskService via context or future enhancements.
